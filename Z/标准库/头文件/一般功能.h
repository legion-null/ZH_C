#pragma once

#include "../汉化/汉化.h"

#include <stdlib.h>

类型别名 div_t 分数;
类型别名 ldiv_t 长分数;

f64 字符串转浮点数(只读 c8 *字符串);
i32 字符串转整数(只读 c8 *字符串);
i64 字符串转长整数(只读 c8 *字符串);
f64 字符串转浮点数1(只读 c8 *字符串, c8 **下个字符指针);
i64 字符串转长整数1(只读 c8 *字符串, c8 **下个字符指针, i32 基数) ;
u64 字符串转无符号长整数(只读 c8 *字符串, c8 **下个字符指针, i32 基数);
空* 申请内存(usize 元素个数, usize 元素大小);
空 释放内存(空 *指针);
空* 简单申请内存(usize 大小);
空* 重新申请内存(空 *指针, usize 大小);
空 强制退出(空);
i32 退出时调用(空 (*函数)(空));
空 退出(i32 状态);
c8* 获取环境字符串(只读 c8 *名称);
i32 系统命令(只读 c8 *命令);
空* 二分查找(只读 空 *目标, 只读 空 *首个元素, usize 元素个数, usize 元素大小, i32 (*比较函数)(只读 空*, 只读 空*));
空 排序(空 *首个元素, usize 元素个数, usize 元素大小, i32 (*比较函数)(只读 空*, 只读 空*));
i32 整数绝对值(i32 x);
分数 整数转分数(i32 分子, i32 分母);
i64 长整数绝对值(i64 x);
长分数 长整数转分数(i64 分子, i64 分母);
i32 取随机数(空);
空 置随机数种子(u32 随机数种子);
i32 取多字节字符长度(只读 c8 *多字节字符, usize 最大字节数);
usize 多字节字符串转宽字符数组(c32 *宽字符串数组, 只读 c8 *字符串, usize 最大转换字符数);
i32 多字节字符转宽字符(c32 *宽字符, 只读 c8 *多字节字符, usize 最大转换字节数);
usize 宽字符数组转多字节字符串(c8 *字符串, 只读 c32 *宽字符串数组, usize 最大转换字符数);
i32 宽字符转多字节字符(c8 *多字节字符, c32 宽字符);

